# data file for the Fltk User Interface Designer (fluid)
version 1.0300 
header_name {.h} 
code_name {.cxx}
decl {\#include <FL/Fl_Native_File_Chooser.H>} {public global
} 

decl {\#include <FL/Fl_Preferences.H>} {public global
} 

decl {\#include <FL/filename.H>} {private local
} 

decl {\#include "../utils.h"} {private local
} 

decl {int fConnected = 0;} {private local
} 

decl {int online_client(const char *path);} {public global
} 

decl {int offline_client(void);} {public global
} 

decl {extern Fl_Preferences prefs_;} {public global
} 

decl {Fl_Preferences prefs_(Fl_Preferences::USER, "fltk.org", "getmyfiles");} {private global
} 

Function {make_window()} {open C
} {
  Fl_Window {} {
    label {GetMyFil.es} open
    xywh {835 252 535 110} type Double align 80 size_range {535 110 535 110} visible
  } {
    Fl_Button closeButton {
      label Quit
      callback {exit(0);}
      xywh {455 80 75 25}
    }
    Fl_Output urlText {
      label URL
      xywh {55 45 395 25}
    }
    Fl_Button browseButton {
      label Browse
      callback {Fl_Native_File_Chooser fc;
	fc.title("Open");
	fc.type(Fl_Native_File_Chooser::BROWSE_DIRECTORY);
	switch ( fc.show() ) {
	case -1: break;	// Error
	case  1: break; 	// Cancel
	default:		// Choice
		fc.preset_file(fc.filename());
\#ifdef _WIN32
		{
			wchar_t szFile[_MAX_PATH];
			char szFile1[_MAX_PATH];
			ACPToUnicode16((CHAR *)fc.filename(), szFile, _MAX_PATH);
			Unicode16ToUtf8(szFile, szFile1, _MAX_PATH);
			folderText->value(szFile1);
		}
\#else
		folderText->value(fc.filename());
\#endif
		fprintf(stderr, "open %s\\n", fc.filename());
		break;
	}}
      xywh {455 10 75 25}
    }
    Fl_Output folderText {
      label Folder
      xywh {55 10 395 25}
    }
    Fl_Light_Button connectButton {
      label Share
      callback {if (!fConnected) {
\#ifdef _WIN32
	wchar_t szFile[_MAX_PATH];
	char szFile1[_MAX_PATH];
	Utf8ToUnicode16((CHAR *)folderText->value(), szFile, _MAX_PATH);
	Unicode16ToACP(szFile, szFile1, _MAX_PATH);
	fConnected = online_client(szFile1);
\#else
	fConnected = online_client(folderText->value());
\#endif
	if (fConnected) {
		browseButton->deactivate();
		confButton->deactivate();
//		shareButton->value(1);
	}
} else {
	fConnected = offline_client();
	if (!fConnected) {
		browseButton->activate();
		confButton->activate();
//		shareButton->value(0);
		urlText->value("");
	}
}}
      xywh {455 45 75 25} selection_color 88
    }
    Fl_Box infoStr {
      label {ItsMyFile client}
      xywh {5 80 445 25}
    }
    Fl_Button confButton {
      callback {int val;
Fl_Double_Window *w = make_conf_window();
prefs_.get("httpd", val, 1);
enableHttpd->value(val);
prefs_.get("max_conn", val, 0);
maxClients->value(val);
w->show();}
      image {icon/preferences-system.png} xywh {5 80 25 25}
    }
  }
} 

Function {set_online()} {open C
} {
  code {fConnected = 1;
browseButton->deactivate();
confButton->deactivate();
//urlButton->value("Online");
connectButton->value(1);} {}
} 

Function {set_offline()} {open C
} {
  code {fConnected = 0;
browseButton->activate();
confButton->activate();
//urlButton->value("Online");
connectButton->value(0);
urlText->value("");} {}
} 

Function {show_server_directory(void *client, char *dir)} {open selected C
} {
  code {urlText->value(dir);} {}
} 

Function {show_shared_directory(char *dir)} {open C
} {
  code {folderText->value(dir);
folderText->redraw();} {}
} 

Function {make_conf_window()} {open
} {
  Fl_Window {} {
    label Settings open
    xywh {394 252 415 105} type Double modal visible
  } {
    Fl_Spinner maxClients {
      label {Maximum number of connections (0 = unlimited)}
      xywh {5 5 55 25} align 8 minimum 0 maximum 999
    }
    Fl_Check_Button enableHttpd {
      label {Enable direct connection to this client}
      xywh {5 40 300 25} down_box DOWN_BOX
    }
    Fl_Button closeConfButton {
      label Close
      callback {prefs_.set("httpd", enableHttpd->value());
prefs_.set("max_conn", maxClients->value());
o->parent()->hide();
delete(o->parent());}
      xywh {335 75 75 25}
    }
  }
} 

Function {make_update_window()} {open
} {
  Fl_Window {} {open
    xywh {377 615 295 110} type Double modal visible
  } {
    Fl_Button updateButton {
      label {More...}
      callback {fl_open_uri("http://getmyfil.es/?p=download");
exit(0);}
      xywh {215 80 75 25}
    }
    Fl_Box updateStr {
      label {Please update this client to version or better}
      image {icon/stop.png} xywh {0 0 290 75} align 384
    }
  }
} 
