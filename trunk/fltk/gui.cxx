// generated by Fast Light User Interface Designer (fluid) version 1.0300

#include "gui.h"
#include "../utils.h"
static int fConnected = 0; 
Fl_Preferences prefs_(Fl_Preferences::USER, "fltk.org", "getmyfiles"); 

Fl_Button *closeButton=(Fl_Button *)0;

static void cb_closeButton(Fl_Button*, void*) {
  exit(0);
}

Fl_Output *urlText=(Fl_Output *)0;

Fl_Button *browseButton=(Fl_Button *)0;

static void cb_browseButton(Fl_Button*, void*) {
  Fl_Native_File_Chooser fc;
	fc.title("Open");
	fc.type(Fl_Native_File_Chooser::BROWSE_DIRECTORY);
	switch ( fc.show() ) {
	case -1: break;	// Error
	case  1: break; 	// Cancel
	default:		// Choice
		fc.preset_file(fc.filename());
#ifdef _WIN32
		{
			wchar_t szFile[_MAX_PATH];
			char szFile1[_MAX_PATH];
			ACPToUnicode16((CHAR *)fc.filename(), szFile, _MAX_PATH);
			Unicode16ToUtf8(szFile, szFile1, _MAX_PATH);
			folderText->value(szFile1);
		}
#else
		folderText->value(fc.filename());
#endif
		fprintf(stderr, "open %s\n", fc.filename());
		break;
	};
}

Fl_Output *folderText=(Fl_Output *)0;

Fl_Light_Button *connectButton=(Fl_Light_Button *)0;

static void cb_connectButton(Fl_Light_Button*, void*) {
  if (!fConnected) {
#ifdef _WIN32
	wchar_t szFile[_MAX_PATH];
	char szFile1[_MAX_PATH];
	Utf8ToUnicode16((CHAR *)folderText->value(), szFile, _MAX_PATH);
	Unicode16ToACP(szFile, szFile1, _MAX_PATH);
	fConnected = online_client(szFile1);
#else
	fConnected = online_client(folderText->value());
#endif
	if (fConnected) {
		browseButton->deactivate();
		confButton->deactivate();
//		shareButton->value(1);
	}
} else {
	fConnected = offline_client();
	if (!fConnected) {
		browseButton->activate();
		confButton->activate();
//		shareButton->value(0);
		urlText->value("");
	}
};
}

Fl_Box *infoStr=(Fl_Box *)0;

Fl_Button *confButton=(Fl_Button *)0;

static void cb_confButton(Fl_Button*, void*) {
  int val;
Fl_Double_Window *w = make_conf_window();
prefs_.get("httpd", val, 1);
enableHttpd->value(val);
prefs_.get("max_conn", val, 0);
maxClients->value(val);
w->show();
}

#include <FL/Fl_Image.H>
static unsigned char idata_preferences[] =
{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,127,127,127,127,127,127,127,255,127,127,127,255,127,127,127,118,127,127,127,
68,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
127,127,127,255,234,233,232,255,249,249,248,255,216,216,215,255,127,127,127,255,
115,115,115,75,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,1,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,127,127,127,25,127,127,127,255,248,247,246,255,243,242,241,255,216,216,215,
255,127,127,127,255,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,52,
101,164,25,130,151,178,255,52,101,164,164,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,1,127,127,127,48,0,0,0,0,0,0,0,0,127,127,127,25,127,127,127,255,236,
234,232,255,249,249,248,255,127,127,127,255,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,52,101,164,48,52,101,164,255,255,255,255,255,78,116,164,188,52,
101,164,188,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,124,124,124,130,127,127,127,255,127,
127,127,131,0,0,0,0,0,0,0,0,187,187,187,255,237,235,234,255,249,249,248,255,127,
127,127,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,52,101,164,255,255,
255,255,255,204,204,204,255,175,175,175,255,101,132,172,255,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,6,127,127,127,255,232,231,228,255,234,234,234,248,127,127,127,255,
173,173,173,255,227,227,226,255,236,234,232,255,250,250,249,255,121,120,116,200,
127,127,127,48,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,52,101,164,48,52,101,164,255,220,
220,220,255,175,175,175,255,52,101,164,255,52,101,164,25,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,153,153,153,211,232,231,230,255,242,241,239,255,237,235,233,255,236,
234,232,255,235,233,231,255,235,233,231,255,235,233,231,255,249,249,248,255,127,
127,127,255,127,127,127,25,0,0,0,0,0,0,0,0,52,101,164,48,52,101,164,255,250,250,
250,255,52,101,164,255,52,101,164,255,52,101,164,48,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,127,127,127,25,135,135,135,239,207,205,202,255,248,248,247,255,
249,249,248,255,249,249,247,255,249,249,248,255,235,233,231,255,235,233,231,255,
249,248,247,255,127,127,127,255,127,127,127,25,52,101,164,48,52,101,164,255,254,
254,254,251,52,101,164,255,52,101,164,68,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,127,127,127,48,158,158,158,204,127,127,127,255,127,
127,127,255,127,127,127,255,181,181,181,250,249,249,248,255,236,234,232,255,235,
233,231,255,246,246,245,255,159,159,158,255,52,101,164,255,248,248,248,255,52,
101,164,255,52,101,164,48,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,127,127,127,25,127,127,127,
86,127,127,127,255,249,249,248,255,231,230,228,255,187,193,200,255,69,113,169,
255,244,244,244,255,52,101,164,255,52,101,164,48,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,127,127,127,48,127,127,127,255,157,176,202,255,52,101,164,
255,223,223,223,255,89,125,171,255,167,167,166,255,127,127,127,48,0,0,0,0,0,0,0,
0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,52,101,164,25,32,74,135,255,32,74,135,255,32,74,135,255,
52,101,164,255,244,244,244,255,84,124,174,255,164,173,182,255,251,251,251,255,
127,127,127,255,127,127,127,25,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,52,101,164,25,32,74,135,255,
117,144,174,255,164,186,208,255,144,166,190,255,32,74,135,255,52,101,164,255,
167,177,189,255,193,193,193,255,227,226,225,255,254,254,254,255,127,127,127,255,
127,127,127,48,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,52,101,164,25,32,74,135,255,117,144,174,255,211,223,234,255,
162,174,188,255,157,182,206,255,99,123,149,255,32,74,135,255,127,127,127,255,
254,254,254,255,235,233,231,255,235,233,231,255,254,254,254,255,127,127,127,255,
127,127,127,48,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
52,101,164,25,32,74,135,255,132,156,182,255,215,226,237,255,141,152,165,255,99,
123,149,255,157,184,210,255,96,119,145,255,32,74,135,255,127,127,127,48,127,127,
127,255,254,254,254,255,236,234,232,255,235,233,231,255,254,254,254,255,127,127,
127,255,127,127,127,48,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,52,101,
164,25,32,74,135,255,153,173,195,255,223,231,240,255,129,147,169,255,88,109,132,
255,157,184,210,255,117,144,174,255,91,113,137,255,32,74,135,255,113,113,113,28,
121,121,121,50,127,127,127,255,254,254,254,255,235,233,231,255,235,233,231,255,
254,254,254,255,134,134,134,255,127,127,127,48,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
52,101,164,48,32,74,135,255,161,180,200,255,238,243,246,255,129,147,169,255,96,
118,143,255,157,184,210,255,117,144,174,255,91,113,137,255,32,74,135,255,36,70,
113,36,0,0,0,11,0,0,0,12,103,103,103,59,127,127,127,255,254,254,254,255,228,227,
225,255,95,95,94,255,254,254,254,255,127,127,127,255,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,32,74,135,255,145,166,190,255,240,244,247,255,151,165,182,255,96,118,
143,255,157,184,210,255,117,144,174,255,91,113,137,255,32,74,135,255,27,52,85,
48,26,50,82,50,0,0,0,29,0,0,0,31,58,58,58,54,82,82,82,74,127,127,127,255,254,
254,254,255,243,243,242,255,240,240,240,255,127,127,127,255,0,0,0,2,0,0,0,0,0,0,
0,0,0,0,0,0,32,74,135,255,176,198,219,255,237,242,246,255,129,138,149,255,157,
184,210,255,117,144,174,255,91,113,137,255,32,74,135,255,20,40,65,63,0,0,0,43,0,
0,0,45,0,0,0,46,0,0,0,48,0,0,0,50,0,0,0,49,70,70,70,87,145,145,145,255,127,
127,127,255,125,125,125,201,120,120,120,80,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,32,
74,135,255,108,133,161,255,157,184,210,255,192,209,226,255,145,166,190,255,91,
113,137,255,32,74,135,255,22,43,70,58,0,0,0,38,0,0,0,38,0,0,0,40,0,0,0,40,0,0,0,
38,0,0,0,39,0,0,0,39,0,0,0,36,0,0,0,29,0,0,0,18,0,0,0,10,0,0,0,6,0,0,0,3,0,0,0,
0,0,0,0,0,0,0,0,0,50,98,160,49,32,74,135,255,108,133,161,255,108,133,161,255,
99,123,149,255,32,74,135,255,39,76,124,63,30,60,97,42,0,0,0,18,0,0,0,18,0,0,0,
19,0,0,0,20,0,0,0,20,0,0,0,19,0,0,0,20,0,0,0,18,0,0,0,15,0,0,0,11,0,0,0,6,0,0,
0,3,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,50,98,160,49,32,74,135,255,32,74,
135,255,32,74,135,255,44,87,141,29,0,0,0,5,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,5,0,0,
0,5,0,0,0,6,0,0,0,6,0,0,0,7,0,0,0,6,0,0,0,6,0,0,0,4,0,0,0,2,0,0,0,1,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0};
static Fl_RGB_Image image_preferences(idata_preferences, 24, 24, 4, 0);

Fl_Double_Window* make_window() {
  Fl_Double_Window* w;
  { Fl_Double_Window* o = new Fl_Double_Window(535, 110, "GetMyFil.es");
    w = o;
    o->align(Fl_Align(FL_ALIGN_CLIP|FL_ALIGN_INSIDE));
    { closeButton = new Fl_Button(455, 80, 75, 25, "Quit");
      closeButton->callback((Fl_Callback*)cb_closeButton);
    } // Fl_Button* closeButton
    { urlText = new Fl_Output(55, 45, 395, 25, "URL");
    } // Fl_Output* urlText
    { browseButton = new Fl_Button(455, 10, 75, 25, "Browse");
      browseButton->callback((Fl_Callback*)cb_browseButton);
    } // Fl_Button* browseButton
    { folderText = new Fl_Output(55, 10, 395, 25, "Folder");
    } // Fl_Output* folderText
    { connectButton = new Fl_Light_Button(455, 45, 75, 25, "Share");
      connectButton->selection_color(FL_RED);
      connectButton->callback((Fl_Callback*)cb_connectButton);
    } // Fl_Light_Button* connectButton
    { infoStr = new Fl_Box(5, 80, 445, 25, "ItsMyFile client");
    } // Fl_Box* infoStr
    { confButton = new Fl_Button(5, 80, 25, 25);
      confButton->image(image_preferences);
      confButton->callback((Fl_Callback*)cb_confButton);
    } // Fl_Button* confButton
    o->size_range(535, 110, 535, 110);
    o->end();
  } // Fl_Double_Window* o
  return w;
}

void set_online() {
  fConnected = 1;
  browseButton->deactivate();
  //urlButton->value("Online");
  connectButton->value(1);
}

void set_offline() {
  fConnected = 0;
  browseButton->activate();
  //urlButton->value("Online");
  connectButton->value(0);
  urlText->value("");
}

void show_server_directory(char *dir) {
  urlText->value(dir);
}

void show_shared_directory(char *dir) {
  folderText->value(dir);
}

Fl_Spinner *maxClients=(Fl_Spinner *)0;

Fl_Check_Button *enableHttpd=(Fl_Check_Button *)0;

Fl_Button *closeConfButton=(Fl_Button *)0;

static void cb_closeConfButton(Fl_Button* o, void*) {
  prefs_.set("httpd", enableHttpd->value());
prefs_.set("max_conn", maxClients->value());
o->parent()->hide();
delete(o->parent());
}

Fl_Double_Window* make_conf_window() {
  Fl_Double_Window* w;
  { Fl_Double_Window* o = new Fl_Double_Window(310, 95, "Settings");
    w = o;
    { maxClients = new Fl_Spinner(5, 5, 55, 25, "Maximum number of connections");
      maxClients->minimum(0);
      maxClients->maximum(999);
      maxClients->align(Fl_Align(FL_ALIGN_RIGHT));
    } // Fl_Spinner* maxClients
    { enableHttpd = new Fl_Check_Button(5, 35, 300, 25, "Enable direct connection to this client");
      enableHttpd->down_box(FL_DOWN_BOX);
    } // Fl_Check_Button* enableHttpd
    { closeConfButton = new Fl_Button(230, 65, 75, 25, "Close");
      closeConfButton->callback((Fl_Callback*)cb_closeConfButton);
    } // Fl_Button* closeConfButton
    o->set_modal();
    o->end();
  } // Fl_Double_Window* o
  return w;
}
